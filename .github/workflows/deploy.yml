name: Deploy with E2E Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '20'

jobs:
  # Run full test suite before deploy
  pre-deploy-tests:
    name: Pre-Deploy Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Full test suite
        run: npm test -- --coverage

      - name: Data validation
        run: |
          npm run validate-integrity
          npm run audit:all

      - name: Build
        run: npm run build

      - name: Store build for E2E
        uses: actions/upload-artifact@v4
        with:
          name: pre-deploy-build
          path: dist/

  # E2E Tests
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [pre-deploy-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: pre-deploy-build
          path: dist/

      - name: Start test server
        run: |
          npm run preview &
          sleep 10

      - name: Run E2E tests
        run: npx playwright test --config=playwright.config.js

      - name: Upload E2E results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: |
            test-results/
            playwright-report/

  # Deploy to Vercel
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'staging' }}
    runs-on: ubuntu-latest
    needs: [pre-deploy-tests, e2e-tests]
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: ${{ github.event.inputs.environment == 'production' && '--prod' || '' }}

  # Post-deploy health checks
  post-deploy-validation:
    name: Post-Deploy Validation
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Health Check
        run: |
          # Wait for deployment to be ready
          sleep 30

          # Check deployment health (customize URL)
          DEPLOY_URL="https://verb-os.vercel.app"

          echo "Checking deployment health at $DEPLOY_URL"
          curl -f -s -o /dev/null "$DEPLOY_URL" || exit 1

          echo "âœ… Deployment is healthy"

      - name: Lighthouse Performance Audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://verb-os.vercel.app
            https://verb-os.vercel.app/?mode=learning
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
        continue-on-error: true

      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'staging' }}"
          echo "URL: https://verb-os.vercel.app"