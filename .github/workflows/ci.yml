name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quality Gates
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: Data validation
        run: |
          node src/validate-data.js
          npm run validate-integrity

  # Unit and Integration Tests
  test-matrix:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['18', '20', '22']
        include:
          - os: macos-latest
            node-version: '20'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --reporter=verbose --coverage

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true

      - name: Store coverage artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage/
            test-results.xml

  # Build Test
  build-test:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [lint-and-format]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check bundle size
        run: |
          echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          find dist/assets/ -name "*.js" -exec ls -lh {} \; | head -10 >> $GITHUB_STEP_SUMMARY

      - name: Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  # Security Scan
  security-scan:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Run linguistic data audit
        run: npm run audit:all

  # Performance Baseline
  performance-test:
    name: Performance Baseline
    runs-on: ubuntu-latest
    needs: [build-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Performance tests
        run: npm test -- --run src/lib/progress/performance.test.js

      - name: Bundle analysis
        run: |
          npx vite-bundle-analyzer dist/ --mode json > bundle-stats.json
        continue-on-error: true

      - name: Upload performance data
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: |
            bundle-stats.json
            performance-*.json

# Status Check Summary
  status-check:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [lint-and-format, test-matrix, build-test, security-scan, performance-test]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "Lint and Format: ${{ needs.lint-and-format.result }}"
          echo "Test Matrix: ${{ needs.test-matrix.result }}"
          echo "Build Test: ${{ needs.build-test.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"
          echo "Performance Test: ${{ needs.performance-test.result }}"

          if [[ "${{ needs.lint-and-format.result }}" != "success" ||
                "${{ needs.test-matrix.result }}" != "success" ||
                "${{ needs.build-test.result }}" != "success" ||
                "${{ needs.security-scan.result }}" != "success" ]]; then
            echo "❌ One or more checks failed"
            exit 1
          fi

          echo "✅ All quality gates passed!"